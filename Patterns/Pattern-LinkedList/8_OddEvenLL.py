"""
https://leetcode.com/problems/odd-even-linked-list/description/
328. Odd Even Linked List
Given the head of a singly linked list, group all the nodes with odd indices together followed by the nodes with even indices, and return the reordered list.

The first node is considered odd, and the second node is even, and so on.

Note that the relative order inside both the even and odd groups should remain as it was in the input.

You must solve the problem in O(1) extra space complexity and O(n) time complexity.

Input: head = [1,2,3,4,5]

Output: [1,3,5,2,4]

 1 -> 2 - > 3 -> 4 -> 5 -> 6
 odd  even

 odd.next = odd.next.next = 3
 even.next = event.next.next = 4

 1-> 3 ->
    odd
2-> 4 ->
    even

1-> 3 -> 5

2 -> 4-> 6
"""
from typing import Optional


class ListNode:
    def __init__(self, val=0, next=None):
        self.val = val
        self.next = next
class Solution:
    def oddEvenList(self, head: Optional[ListNode]) -> Optional[ListNode]:


        if not head:
            return None



        oddH = head
        evenH = temp = head.next


        while  evenH and evenH.next:
            oddH.next = evenH.next
            oddH = oddH.next
            if oddH.next:
                evenH.next = oddH.next
            else:
                evenH.next = None
            evenH = evenH.next


        oddH.next = temp



        return head











































































































































































































































































































































































































































































































































































































































































































































































































































































































































































def displayLL(head):
    curr = head

    while curr:
        print(curr.val,end ="->")
        curr = curr.next



LL1 = ListNode(1, ListNode(2, ListNode(3, ListNode(4, ListNode(5, ListNode(6))))))
res = Solution().oddEvenList(LL1)
displayLL(res)



